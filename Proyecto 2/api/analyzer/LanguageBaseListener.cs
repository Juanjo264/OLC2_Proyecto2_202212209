//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILanguageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LanguageBaseListener : ILanguageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] LanguageParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] LanguageParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.listainstrucciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListainstrucciones([NotNull] LanguageParser.ListainstruccionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.listainstrucciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListainstrucciones([NotNull] LanguageParser.ListainstruccionesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionVar([NotNull] LanguageParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionVar([NotNull] LanguageParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlicevacio</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionSlicevacio([NotNull] LanguageParser.DeclaracionSlicevacioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlicevacio</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionSlicevacio([NotNull] LanguageParser.DeclaracionSlicevacioContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlicemulti</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionSlicemulti([NotNull] LanguageParser.DeclaracionSlicemultiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlicemulti</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionSlicemulti([NotNull] LanguageParser.DeclaracionSlicemultiContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.fila"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFila([NotNull] LanguageParser.FilaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.fila"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFila([NotNull] LanguageParser.FilaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructdcl([NotNull] LanguageParser.StructdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructdcl([NotNull] LanguageParser.StructdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructBody([NotNull] LanguageParser.StructBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructBody([NotNull] LanguageParser.StructBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcdlc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncdlc([NotNull] LanguageParser.FuncdlcContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcdlc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncdlc([NotNull] LanguageParser.FuncdlcContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParams([NotNull] LanguageParser.ParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParams([NotNull] LanguageParser.ParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] LanguageParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] LanguageParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprecionInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprecionInstruccion([NotNull] LanguageParser.ExprecionInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprecionInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprecionInstruccion([NotNull] LanguageParser.ExprecionInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakInstruccion([NotNull] LanguageParser.BreakInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakInstruccion([NotNull] LanguageParser.BreakInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueInstruccion([NotNull] LanguageParser.ContinueInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueInstruccion([NotNull] LanguageParser.ContinueInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnInstruccion([NotNull] LanguageParser.ReturnInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnInstruccion([NotNull] LanguageParser.ReturnInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrintInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintInstruccion([NotNull] LanguageParser.PrintInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrintInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintInstruccion([NotNull] LanguageParser.PrintInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] LanguageParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] LanguageParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BloqueInstrucciones</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBloqueInstrucciones([NotNull] LanguageParser.BloqueInstruccionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BloqueInstrucciones</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBloqueInstrucciones([NotNull] LanguageParser.BloqueInstruccionesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfInstruccion([NotNull] LanguageParser.IfInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfInstruccion([NotNull] LanguageParser.IfInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileInstruccion([NotNull] LanguageParser.WhileInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileInstruccion([NotNull] LanguageParser.WhileInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchInstruccion([NotNull] LanguageParser.SwitchInstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchInstruccion([NotNull] LanguageParser.SwitchInstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForCondicion([NotNull] LanguageParser.ForCondicionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForCondicion([NotNull] LanguageParser.ForCondicionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Forincicializacion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForincicializacion([NotNull] LanguageParser.ForincicializacionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Forincicializacion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForincicializacion([NotNull] LanguageParser.ForincicializacionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForRange([NotNull] LanguageParser.ForRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForRange([NotNull] LanguageParser.ForRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.cases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCases([NotNull] LanguageParser.CasesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.cases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCases([NotNull] LanguageParser.CasesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultCase([NotNull] LanguageParser.DefaultCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.defaultCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultCase([NotNull] LanguageParser.DefaultCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Equalitys</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualitys([NotNull] LanguageParser.EqualitysContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Equalitys</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualitys([NotNull] LanguageParser.EqualitysContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallee([NotNull] LanguageParser.CalleeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallee([NotNull] LanguageParser.CalleeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>New</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew([NotNull] LanguageParser.NewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>New</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew([NotNull] LanguageParser.NewContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Logicos</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicos([NotNull] LanguageParser.LogicosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Logicos</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicos([NotNull] LanguageParser.LogicosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IncrementoDecremento</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncrementoDecremento([NotNull] LanguageParser.IncrementoDecrementoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IncrementoDecremento</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncrementoDecremento([NotNull] LanguageParser.IncrementoDecrementoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMod([NotNull] LanguageParser.ModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMod([NotNull] LanguageParser.ModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boleanTrueExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoleanTrueExpresion([NotNull] LanguageParser.BoleanTrueExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boleanTrueExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoleanTrueExpresion([NotNull] LanguageParser.BoleanTrueExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InstanciaStruct</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanciaStruct([NotNull] LanguageParser.InstanciaStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InstanciaStruct</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanciaStruct([NotNull] LanguageParser.InstanciaStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDiv([NotNull] LanguageParser.MulDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDiv([NotNull] LanguageParser.MulDivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSub([NotNull] LanguageParser.AddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSub([NotNull] LanguageParser.AddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParens([NotNull] LanguageParser.ParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParens([NotNull] LanguageParser.ParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational([NotNull] LanguageParser.RelationalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational([NotNull] LanguageParser.RelationalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperadorNegacion([NotNull] LanguageParser.OperadorNegacionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperadorNegacion([NotNull] LanguageParser.OperadorNegacionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt([NotNull] LanguageParser.IntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt([NotNull] LanguageParser.IntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaracterExpresion([NotNull] LanguageParser.CaracterExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaracterExpresion([NotNull] LanguageParser.CaracterExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNilExpresion([NotNull] LanguageParser.NilExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNilExpresion([NotNull] LanguageParser.NilExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ModuleFuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleFuncCall([NotNull] LanguageParser.ModuleFuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ModuleFuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleFuncCall([NotNull] LanguageParser.ModuleFuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloat([NotNull] LanguageParser.FloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloat([NotNull] LanguageParser.FloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Idexpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdexpresion([NotNull] LanguageParser.IdexpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Idexpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdexpresion([NotNull] LanguageParser.IdexpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCadenaExpresion([NotNull] LanguageParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCadenaExpresion([NotNull] LanguageParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccesoSliceMulti([NotNull] LanguageParser.AccesoSliceMultiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccesoSliceMulti([NotNull] LanguageParser.AccesoSliceMultiContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegate([NotNull] LanguageParser.NegateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegate([NotNull] LanguageParser.NegateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boleanFalseExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoleanFalseExpresion([NotNull] LanguageParser.BoleanFalseExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boleanFalseExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoleanFalseExpresion([NotNull] LanguageParser.BoleanFalseExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.camposStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCamposStruct([NotNull] LanguageParser.CamposStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.camposStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCamposStruct([NotNull] LanguageParser.CamposStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.campoStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCampoStruct([NotNull] LanguageParser.CampoStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.campoStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCampoStruct([NotNull] LanguageParser.CampoStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] LanguageParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] LanguageParser.FuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Get</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGet([NotNull] LanguageParser.GetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Get</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGet([NotNull] LanguageParser.GetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgs([NotNull] LanguageParser.ArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgs([NotNull] LanguageParser.ArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incremento</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncremento([NotNull] LanguageParser.IncrementoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incremento</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncremento([NotNull] LanguageParser.IncrementoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AsignarSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignarSliceMulti([NotNull] LanguageParser.AsignarSliceMultiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AsignarSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignarSliceMulti([NotNull] LanguageParser.AsignarSliceMultiContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarSliceCompleto</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignarSliceCompleto([NotNull] LanguageParser.AsignarSliceCompletoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarSliceCompleto</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignarSliceCompleto([NotNull] LanguageParser.AsignarSliceCompletoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarVar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignarVar([NotNull] LanguageParser.AsignarVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarVar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignarVar([NotNull] LanguageParser.AsignarVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] LanguageParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] LanguageParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.impresiones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImpresiones([NotNull] LanguageParser.ImpresionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.impresiones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImpresiones([NotNull] LanguageParser.ImpresionesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] LanguageParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] LanguageParser.IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTipo([NotNull] LanguageParser.TipoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTipo([NotNull] LanguageParser.TipoContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
