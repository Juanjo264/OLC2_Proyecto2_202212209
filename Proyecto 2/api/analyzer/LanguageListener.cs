//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.listainstrucciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListainstrucciones([NotNull] LanguageParser.ListainstruccionesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.listainstrucciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListainstrucciones([NotNull] LanguageParser.ListainstruccionesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionVar([NotNull] LanguageParser.DeclaracionVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionVar([NotNull] LanguageParser.DeclaracionVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlicevacio</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionSlicevacio([NotNull] LanguageParser.DeclaracionSlicevacioContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlicevacio</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionSlicevacio([NotNull] LanguageParser.DeclaracionSlicevacioContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSlicemulti</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionSlicemulti([NotNull] LanguageParser.DeclaracionSlicemultiContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSlicemulti</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionSlicemulti([NotNull] LanguageParser.DeclaracionSlicemultiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.fila"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFila([NotNull] LanguageParser.FilaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.fila"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFila([NotNull] LanguageParser.FilaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structdcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructdcl([NotNull] LanguageParser.StructdclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structdcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructdcl([NotNull] LanguageParser.StructdclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructBody([NotNull] LanguageParser.StructBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructBody([NotNull] LanguageParser.StructBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcdlc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncdlc([NotNull] LanguageParser.FuncdlcContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcdlc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncdlc([NotNull] LanguageParser.FuncdlcContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParams([NotNull] LanguageParser.ParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParams([NotNull] LanguageParser.ParamsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] LanguageParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] LanguageParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprecionInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprecionInstruccion([NotNull] LanguageParser.ExprecionInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprecionInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprecionInstruccion([NotNull] LanguageParser.ExprecionInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakInstruccion([NotNull] LanguageParser.BreakInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakInstruccion([NotNull] LanguageParser.BreakInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueInstruccion([NotNull] LanguageParser.ContinueInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueInstruccion([NotNull] LanguageParser.ContinueInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnInstruccion([NotNull] LanguageParser.ReturnInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnInstruccion([NotNull] LanguageParser.ReturnInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrintInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintInstruccion([NotNull] LanguageParser.PrintInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrintInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintInstruccion([NotNull] LanguageParser.PrintInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] LanguageParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] LanguageParser.AssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BloqueInstrucciones</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBloqueInstrucciones([NotNull] LanguageParser.BloqueInstruccionesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BloqueInstrucciones</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBloqueInstrucciones([NotNull] LanguageParser.BloqueInstruccionesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfInstruccion([NotNull] LanguageParser.IfInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfInstruccion([NotNull] LanguageParser.IfInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileInstruccion([NotNull] LanguageParser.WhileInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileInstruccion([NotNull] LanguageParser.WhileInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchInstruccion([NotNull] LanguageParser.SwitchInstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchInstruccion([NotNull] LanguageParser.SwitchInstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCondicion([NotNull] LanguageParser.ForCondicionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCondicion([NotNull] LanguageParser.ForCondicionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Forincicializacion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForincicializacion([NotNull] LanguageParser.ForincicializacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Forincicializacion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForincicializacion([NotNull] LanguageParser.ForincicializacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForRange([NotNull] LanguageParser.ForRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForRange([NotNull] LanguageParser.ForRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.cases"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCases([NotNull] LanguageParser.CasesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.cases"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCases([NotNull] LanguageParser.CasesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.defaultCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultCase([NotNull] LanguageParser.DefaultCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.defaultCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultCase([NotNull] LanguageParser.DefaultCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Equalitys</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualitys([NotNull] LanguageParser.EqualitysContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Equalitys</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualitys([NotNull] LanguageParser.EqualitysContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallee([NotNull] LanguageParser.CalleeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallee([NotNull] LanguageParser.CalleeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>New</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNew([NotNull] LanguageParser.NewContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>New</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNew([NotNull] LanguageParser.NewContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Logicos</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicos([NotNull] LanguageParser.LogicosContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Logicos</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicos([NotNull] LanguageParser.LogicosContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IncrementoDecremento</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncrementoDecremento([NotNull] LanguageParser.IncrementoDecrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IncrementoDecremento</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncrementoDecremento([NotNull] LanguageParser.IncrementoDecrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMod([NotNull] LanguageParser.ModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMod([NotNull] LanguageParser.ModContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boleanTrueExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoleanTrueExpresion([NotNull] LanguageParser.BoleanTrueExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boleanTrueExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoleanTrueExpresion([NotNull] LanguageParser.BoleanTrueExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>InstanciaStruct</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanciaStruct([NotNull] LanguageParser.InstanciaStructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>InstanciaStruct</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanciaStruct([NotNull] LanguageParser.InstanciaStructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDiv([NotNull] LanguageParser.MulDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDiv([NotNull] LanguageParser.MulDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational([NotNull] LanguageParser.RelationalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational([NotNull] LanguageParser.RelationalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperadorNegacion([NotNull] LanguageParser.OperadorNegacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperadorNegacion([NotNull] LanguageParser.OperadorNegacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] LanguageParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] LanguageParser.IntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaracterExpresion([NotNull] LanguageParser.CaracterExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaracterExpresion([NotNull] LanguageParser.CaracterExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNilExpresion([NotNull] LanguageParser.NilExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNilExpresion([NotNull] LanguageParser.NilExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ModuleFuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleFuncCall([NotNull] LanguageParser.ModuleFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ModuleFuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleFuncCall([NotNull] LanguageParser.ModuleFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat([NotNull] LanguageParser.FloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat([NotNull] LanguageParser.FloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Idexpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdexpresion([NotNull] LanguageParser.IdexpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Idexpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdexpresion([NotNull] LanguageParser.IdexpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCadenaExpresion([NotNull] LanguageParser.CadenaExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCadenaExpresion([NotNull] LanguageParser.CadenaExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccesoSliceMulti([NotNull] LanguageParser.AccesoSliceMultiContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccesoSliceMulti([NotNull] LanguageParser.AccesoSliceMultiContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boleanFalseExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoleanFalseExpresion([NotNull] LanguageParser.BoleanFalseExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boleanFalseExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoleanFalseExpresion([NotNull] LanguageParser.BoleanFalseExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.camposStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCamposStruct([NotNull] LanguageParser.CamposStructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.camposStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCamposStruct([NotNull] LanguageParser.CamposStructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.campoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCampoStruct([NotNull] LanguageParser.CampoStructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.campoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCampoStruct([NotNull] LanguageParser.CampoStructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCall([NotNull] LanguageParser.FuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCall([NotNull] LanguageParser.FuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Get</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGet([NotNull] LanguageParser.GetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Get</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGet([NotNull] LanguageParser.GetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>incremento</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncremento([NotNull] LanguageParser.IncrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>incremento</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncremento([NotNull] LanguageParser.IncrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AsignarSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarSliceMulti([NotNull] LanguageParser.AsignarSliceMultiContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AsignarSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarSliceMulti([NotNull] LanguageParser.AsignarSliceMultiContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarSliceCompleto</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarSliceCompleto([NotNull] LanguageParser.AsignarSliceCompletoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarSliceCompleto</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarSliceCompleto([NotNull] LanguageParser.AsignarSliceCompletoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignarVar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarVar([NotNull] LanguageParser.AsignarVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignarVar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarVar([NotNull] LanguageParser.AsignarVarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] LanguageParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] LanguageParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.impresiones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpresiones([NotNull] LanguageParser.ImpresionesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.impresiones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpresiones([NotNull] LanguageParser.ImpresionesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] LanguageParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] LanguageParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTipo([NotNull] LanguageParser.TipoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTipo([NotNull] LanguageParser.TipoContext context);
}
