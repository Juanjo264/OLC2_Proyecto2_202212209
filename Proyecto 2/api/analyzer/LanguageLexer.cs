//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class LanguageLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		TRUE=46, FALSE=47, INT=48, FLOAT=49, WS=50, CARACTER=51, CADENA=52, ID=53, 
		PIZQ=54, PDER=55, LLAVE_ABRE=56, LLAVE_CIERRA=57, CORCHETE_ABRE=58, CORCHETE_CIERRA=59, 
		IGUAL=60, DOSPUNTOS_IGUAL=61, MASIGUAL=62, MENOSIGUAL=63, LLINEAC=64, 
		MULTILINEAC=65;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "TRUE", "FALSE", "INT", "FLOAT", "WS", 
		"CARACTER", "CADENA", "ESC_SEQ", "ID", "PIZQ", "PDER", "LLAVE_ABRE", "LLAVE_CIERRA", 
		"CORCHETE_ABRE", "CORCHETE_CIERRA", "IGUAL", "DOSPUNTOS_IGUAL", "MASIGUAL", 
		"MENOSIGUAL", "LLINEAC", "MULTILINEAC"
	};


	public LanguageLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public LanguageLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'var'", "';'", "'[]'", "','", "'[][]'", "'type'", "'struct'", "'func'", 
		"'break'", "'continue'", "'return'", "'if'", "'else'", "'while'", "'switch'", 
		"'for'", "'range'", "'case'", "':'", "'default'", "'!'", "'-'", "'.'", 
		"'*'", "'/'", "'%'", "'+'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", 
		"'&&'", "'||'", "'new'", "'++'", "'--'", "'nil'", "'fmt.Println'", "'int'", 
		"'float64'", "'string'", "'bool'", "'rune'", "'true'", "'false'", null, 
		null, null, null, null, null, "'('", "')'", "'{'", "'}'", "'['", "']'", 
		"'='", "':='", "'+='", "'-='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "TRUE", "FALSE", 
		"INT", "FLOAT", "WS", "CARACTER", "CADENA", "ID", "PIZQ", "PDER", "LLAVE_ABRE", 
		"LLAVE_CIERRA", "CORCHETE_ABRE", "CORCHETE_CIERRA", "IGUAL", "DOSPUNTOS_IGUAL", 
		"MASIGUAL", "MENOSIGUAL", "LLINEAC", "MULTILINEAC"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Language.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static LanguageLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,65,431,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,
		4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,
		1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
		9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,
		1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
		1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
		1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
		1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
		1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,
		1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,37,
		1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
		1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
		1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
		1,46,1,46,1,47,4,47,338,8,47,11,47,12,47,339,1,48,4,48,343,8,48,11,48,
		12,48,344,1,48,1,48,4,48,349,8,48,11,48,12,48,350,1,49,4,49,354,8,49,11,
		49,12,49,355,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,5,51,367,8,51,
		10,51,12,51,370,9,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,5,53,379,8,53,
		10,53,12,53,382,9,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,
		1,59,1,59,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,
		1,64,1,64,1,64,5,64,411,8,64,10,64,12,64,414,9,64,1,64,1,64,1,65,1,65,
		1,65,1,65,5,65,422,8,65,10,65,12,65,425,9,65,1,65,1,65,1,65,1,65,1,65,
		1,423,0,66,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
		13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
		25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
		37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
		49,99,50,101,51,103,52,105,0,107,53,109,54,111,55,113,56,115,57,117,58,
		119,59,121,60,123,61,125,62,127,63,129,64,131,65,1,0,7,1,0,48,57,3,0,9,
		10,13,13,32,32,4,0,10,10,13,13,34,34,92,92,6,0,34,34,92,92,98,98,110,110,
		114,114,116,116,3,0,65,90,95,95,97,122,3,0,48,57,65,90,97,122,2,0,10,10,
		13,13,438,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
		0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
		1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,
		0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
		1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
		0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
		0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
		0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,
		0,131,1,0,0,0,1,133,1,0,0,0,3,137,1,0,0,0,5,139,1,0,0,0,7,142,1,0,0,0,
		9,144,1,0,0,0,11,149,1,0,0,0,13,154,1,0,0,0,15,161,1,0,0,0,17,166,1,0,
		0,0,19,172,1,0,0,0,21,181,1,0,0,0,23,188,1,0,0,0,25,191,1,0,0,0,27,196,
		1,0,0,0,29,202,1,0,0,0,31,209,1,0,0,0,33,213,1,0,0,0,35,219,1,0,0,0,37,
		224,1,0,0,0,39,226,1,0,0,0,41,234,1,0,0,0,43,236,1,0,0,0,45,238,1,0,0,
		0,47,240,1,0,0,0,49,242,1,0,0,0,51,244,1,0,0,0,53,246,1,0,0,0,55,248,1,
		0,0,0,57,250,1,0,0,0,59,252,1,0,0,0,61,255,1,0,0,0,63,258,1,0,0,0,65,261,
		1,0,0,0,67,264,1,0,0,0,69,267,1,0,0,0,71,270,1,0,0,0,73,274,1,0,0,0,75,
		277,1,0,0,0,77,280,1,0,0,0,79,284,1,0,0,0,81,296,1,0,0,0,83,300,1,0,0,
		0,85,308,1,0,0,0,87,315,1,0,0,0,89,320,1,0,0,0,91,325,1,0,0,0,93,330,1,
		0,0,0,95,337,1,0,0,0,97,342,1,0,0,0,99,353,1,0,0,0,101,359,1,0,0,0,103,
		363,1,0,0,0,105,373,1,0,0,0,107,376,1,0,0,0,109,383,1,0,0,0,111,385,1,
		0,0,0,113,387,1,0,0,0,115,389,1,0,0,0,117,391,1,0,0,0,119,393,1,0,0,0,
		121,395,1,0,0,0,123,397,1,0,0,0,125,400,1,0,0,0,127,403,1,0,0,0,129,406,
		1,0,0,0,131,417,1,0,0,0,133,134,5,118,0,0,134,135,5,97,0,0,135,136,5,114,
		0,0,136,2,1,0,0,0,137,138,5,59,0,0,138,4,1,0,0,0,139,140,5,91,0,0,140,
		141,5,93,0,0,141,6,1,0,0,0,142,143,5,44,0,0,143,8,1,0,0,0,144,145,5,91,
		0,0,145,146,5,93,0,0,146,147,5,91,0,0,147,148,5,93,0,0,148,10,1,0,0,0,
		149,150,5,116,0,0,150,151,5,121,0,0,151,152,5,112,0,0,152,153,5,101,0,
		0,153,12,1,0,0,0,154,155,5,115,0,0,155,156,5,116,0,0,156,157,5,114,0,0,
		157,158,5,117,0,0,158,159,5,99,0,0,159,160,5,116,0,0,160,14,1,0,0,0,161,
		162,5,102,0,0,162,163,5,117,0,0,163,164,5,110,0,0,164,165,5,99,0,0,165,
		16,1,0,0,0,166,167,5,98,0,0,167,168,5,114,0,0,168,169,5,101,0,0,169,170,
		5,97,0,0,170,171,5,107,0,0,171,18,1,0,0,0,172,173,5,99,0,0,173,174,5,111,
		0,0,174,175,5,110,0,0,175,176,5,116,0,0,176,177,5,105,0,0,177,178,5,110,
		0,0,178,179,5,117,0,0,179,180,5,101,0,0,180,20,1,0,0,0,181,182,5,114,0,
		0,182,183,5,101,0,0,183,184,5,116,0,0,184,185,5,117,0,0,185,186,5,114,
		0,0,186,187,5,110,0,0,187,22,1,0,0,0,188,189,5,105,0,0,189,190,5,102,0,
		0,190,24,1,0,0,0,191,192,5,101,0,0,192,193,5,108,0,0,193,194,5,115,0,0,
		194,195,5,101,0,0,195,26,1,0,0,0,196,197,5,119,0,0,197,198,5,104,0,0,198,
		199,5,105,0,0,199,200,5,108,0,0,200,201,5,101,0,0,201,28,1,0,0,0,202,203,
		5,115,0,0,203,204,5,119,0,0,204,205,5,105,0,0,205,206,5,116,0,0,206,207,
		5,99,0,0,207,208,5,104,0,0,208,30,1,0,0,0,209,210,5,102,0,0,210,211,5,
		111,0,0,211,212,5,114,0,0,212,32,1,0,0,0,213,214,5,114,0,0,214,215,5,97,
		0,0,215,216,5,110,0,0,216,217,5,103,0,0,217,218,5,101,0,0,218,34,1,0,0,
		0,219,220,5,99,0,0,220,221,5,97,0,0,221,222,5,115,0,0,222,223,5,101,0,
		0,223,36,1,0,0,0,224,225,5,58,0,0,225,38,1,0,0,0,226,227,5,100,0,0,227,
		228,5,101,0,0,228,229,5,102,0,0,229,230,5,97,0,0,230,231,5,117,0,0,231,
		232,5,108,0,0,232,233,5,116,0,0,233,40,1,0,0,0,234,235,5,33,0,0,235,42,
		1,0,0,0,236,237,5,45,0,0,237,44,1,0,0,0,238,239,5,46,0,0,239,46,1,0,0,
		0,240,241,5,42,0,0,241,48,1,0,0,0,242,243,5,47,0,0,243,50,1,0,0,0,244,
		245,5,37,0,0,245,52,1,0,0,0,246,247,5,43,0,0,247,54,1,0,0,0,248,249,5,
		62,0,0,249,56,1,0,0,0,250,251,5,60,0,0,251,58,1,0,0,0,252,253,5,62,0,0,
		253,254,5,61,0,0,254,60,1,0,0,0,255,256,5,60,0,0,256,257,5,61,0,0,257,
		62,1,0,0,0,258,259,5,61,0,0,259,260,5,61,0,0,260,64,1,0,0,0,261,262,5,
		33,0,0,262,263,5,61,0,0,263,66,1,0,0,0,264,265,5,38,0,0,265,266,5,38,0,
		0,266,68,1,0,0,0,267,268,5,124,0,0,268,269,5,124,0,0,269,70,1,0,0,0,270,
		271,5,110,0,0,271,272,5,101,0,0,272,273,5,119,0,0,273,72,1,0,0,0,274,275,
		5,43,0,0,275,276,5,43,0,0,276,74,1,0,0,0,277,278,5,45,0,0,278,279,5,45,
		0,0,279,76,1,0,0,0,280,281,5,110,0,0,281,282,5,105,0,0,282,283,5,108,0,
		0,283,78,1,0,0,0,284,285,5,102,0,0,285,286,5,109,0,0,286,287,5,116,0,0,
		287,288,5,46,0,0,288,289,5,80,0,0,289,290,5,114,0,0,290,291,5,105,0,0,
		291,292,5,110,0,0,292,293,5,116,0,0,293,294,5,108,0,0,294,295,5,110,0,
		0,295,80,1,0,0,0,296,297,5,105,0,0,297,298,5,110,0,0,298,299,5,116,0,0,
		299,82,1,0,0,0,300,301,5,102,0,0,301,302,5,108,0,0,302,303,5,111,0,0,303,
		304,5,97,0,0,304,305,5,116,0,0,305,306,5,54,0,0,306,307,5,52,0,0,307,84,
		1,0,0,0,308,309,5,115,0,0,309,310,5,116,0,0,310,311,5,114,0,0,311,312,
		5,105,0,0,312,313,5,110,0,0,313,314,5,103,0,0,314,86,1,0,0,0,315,316,5,
		98,0,0,316,317,5,111,0,0,317,318,5,111,0,0,318,319,5,108,0,0,319,88,1,
		0,0,0,320,321,5,114,0,0,321,322,5,117,0,0,322,323,5,110,0,0,323,324,5,
		101,0,0,324,90,1,0,0,0,325,326,5,116,0,0,326,327,5,114,0,0,327,328,5,117,
		0,0,328,329,5,101,0,0,329,92,1,0,0,0,330,331,5,102,0,0,331,332,5,97,0,
		0,332,333,5,108,0,0,333,334,5,115,0,0,334,335,5,101,0,0,335,94,1,0,0,0,
		336,338,7,0,0,0,337,336,1,0,0,0,338,339,1,0,0,0,339,337,1,0,0,0,339,340,
		1,0,0,0,340,96,1,0,0,0,341,343,7,0,0,0,342,341,1,0,0,0,343,344,1,0,0,0,
		344,342,1,0,0,0,344,345,1,0,0,0,345,346,1,0,0,0,346,348,5,46,0,0,347,349,
		7,0,0,0,348,347,1,0,0,0,349,350,1,0,0,0,350,348,1,0,0,0,350,351,1,0,0,
		0,351,98,1,0,0,0,352,354,7,1,0,0,353,352,1,0,0,0,354,355,1,0,0,0,355,353,
		1,0,0,0,355,356,1,0,0,0,356,357,1,0,0,0,357,358,6,49,0,0,358,100,1,0,0,
		0,359,360,5,39,0,0,360,361,9,0,0,0,361,362,5,39,0,0,362,102,1,0,0,0,363,
		368,5,34,0,0,364,367,3,105,52,0,365,367,8,2,0,0,366,364,1,0,0,0,366,365,
		1,0,0,0,367,370,1,0,0,0,368,366,1,0,0,0,368,369,1,0,0,0,369,371,1,0,0,
		0,370,368,1,0,0,0,371,372,5,34,0,0,372,104,1,0,0,0,373,374,5,92,0,0,374,
		375,7,3,0,0,375,106,1,0,0,0,376,380,7,4,0,0,377,379,7,5,0,0,378,377,1,
		0,0,0,379,382,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,0,381,108,1,0,0,0,
		382,380,1,0,0,0,383,384,5,40,0,0,384,110,1,0,0,0,385,386,5,41,0,0,386,
		112,1,0,0,0,387,388,5,123,0,0,388,114,1,0,0,0,389,390,5,125,0,0,390,116,
		1,0,0,0,391,392,5,91,0,0,392,118,1,0,0,0,393,394,5,93,0,0,394,120,1,0,
		0,0,395,396,5,61,0,0,396,122,1,0,0,0,397,398,5,58,0,0,398,399,5,61,0,0,
		399,124,1,0,0,0,400,401,5,43,0,0,401,402,5,61,0,0,402,126,1,0,0,0,403,
		404,5,45,0,0,404,405,5,61,0,0,405,128,1,0,0,0,406,407,5,47,0,0,407,408,
		5,47,0,0,408,412,1,0,0,0,409,411,8,6,0,0,410,409,1,0,0,0,411,414,1,0,0,
		0,412,410,1,0,0,0,412,413,1,0,0,0,413,415,1,0,0,0,414,412,1,0,0,0,415,
		416,6,64,1,0,416,130,1,0,0,0,417,418,5,47,0,0,418,419,5,42,0,0,419,423,
		1,0,0,0,420,422,9,0,0,0,421,420,1,0,0,0,422,425,1,0,0,0,423,424,1,0,0,
		0,423,421,1,0,0,0,424,426,1,0,0,0,425,423,1,0,0,0,426,427,5,42,0,0,427,
		428,5,47,0,0,428,429,1,0,0,0,429,430,6,65,1,0,430,132,1,0,0,0,10,0,339,
		344,350,355,366,368,380,412,423,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
