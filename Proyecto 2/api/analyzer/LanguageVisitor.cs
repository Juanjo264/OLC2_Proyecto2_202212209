//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.listainstrucciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListainstrucciones([NotNull] LanguageParser.ListainstruccionesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionVar([NotNull] LanguageParser.DeclaracionVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionSlicevacio</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSlicevacio([NotNull] LanguageParser.DeclaracionSlicevacioContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionSlicemulti</c>
	/// labeled alternative in <see cref="LanguageParser.variables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSlicemulti([NotNull] LanguageParser.DeclaracionSlicemultiContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.fila"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFila([NotNull] LanguageParser.FilaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.structdcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructdcl([NotNull] LanguageParser.StructdclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructBody([NotNull] LanguageParser.StructBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.funcdlc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncdlc([NotNull] LanguageParser.FuncdlcContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParams([NotNull] LanguageParser.ParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam([NotNull] LanguageParser.ParamContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprecionInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprecionInstruccion([NotNull] LanguageParser.ExprecionInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BreakInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakInstruccion([NotNull] LanguageParser.BreakInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ContinueInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueInstruccion([NotNull] LanguageParser.ContinueInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReturnInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnInstruccion([NotNull] LanguageParser.ReturnInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrintInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintInstruccion([NotNull] LanguageParser.PrintInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign([NotNull] LanguageParser.AssignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BloqueInstrucciones</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBloqueInstrucciones([NotNull] LanguageParser.BloqueInstruccionesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfInstruccion([NotNull] LanguageParser.IfInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileInstruccion([NotNull] LanguageParser.WhileInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SwitchInstruccion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchInstruccion([NotNull] LanguageParser.SwitchInstruccionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondicion([NotNull] LanguageParser.ForCondicionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Forincicializacion</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForincicializacion([NotNull] LanguageParser.ForincicializacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForRange([NotNull] LanguageParser.ForRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.cases"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCases([NotNull] LanguageParser.CasesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.defaultCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultCase([NotNull] LanguageParser.DefaultCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Equalitys</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualitys([NotNull] LanguageParser.EqualitysContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallee([NotNull] LanguageParser.CalleeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>New</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNew([NotNull] LanguageParser.NewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Logicos</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicos([NotNull] LanguageParser.LogicosContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IncrementoDecremento</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementoDecremento([NotNull] LanguageParser.IncrementoDecrementoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMod([NotNull] LanguageParser.ModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boleanTrueExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoleanTrueExpresion([NotNull] LanguageParser.BoleanTrueExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InstanciaStruct</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanciaStruct([NotNull] LanguageParser.InstanciaStructContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDiv([NotNull] LanguageParser.MulDivContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelational([NotNull] LanguageParser.RelationalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperadorNegacion([NotNull] LanguageParser.OperadorNegacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInt([NotNull] LanguageParser.IntContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaracterExpresion([NotNull] LanguageParser.CaracterExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNilExpresion([NotNull] LanguageParser.NilExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ModuleFuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuleFuncCall([NotNull] LanguageParser.ModuleFuncCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] LanguageParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Idexpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdexpresion([NotNull] LanguageParser.IdexpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCadenaExpresion([NotNull] LanguageParser.CadenaExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AccesoSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccesoSliceMulti([NotNull] LanguageParser.AccesoSliceMultiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boleanFalseExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoleanFalseExpresion([NotNull] LanguageParser.BoleanFalseExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.camposStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCamposStruct([NotNull] LanguageParser.CamposStructContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.campoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCampoStruct([NotNull] LanguageParser.CampoStructContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncCall([NotNull] LanguageParser.FuncCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Get</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGet([NotNull] LanguageParser.GetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>incremento</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncremento([NotNull] LanguageParser.IncrementoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>asignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AsignarSliceMulti</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignarSliceMulti([NotNull] LanguageParser.AsignarSliceMultiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>asignarSliceCompleto</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignarSliceCompleto([NotNull] LanguageParser.AsignarSliceCompletoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>asignarVar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignarVar([NotNull] LanguageParser.AsignarVarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] LanguageParser.PrintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.impresiones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImpresiones([NotNull] LanguageParser.ImpresionesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] LanguageParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipo([NotNull] LanguageParser.TipoContext context);
}
